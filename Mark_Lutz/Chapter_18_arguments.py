
def changer(a, b):         # Аргументам присваиваются ссылки на объекты
    а = 2                  # Изменяет только значение локального имени
    b[0] = 'spam'          # Изменяет разделяемый объект на месте
X = 1
L = [1, 2]
changer(X, L)              # Передача неизменяемого и изменяемого объектов
print(X, L)                # X остается прежним, L отличается!
# 1, [’spam’, 2]


X = 1
a = X                    # Разделяют тот же самый объект
a = 2                    # Переустанавливает только а, значением X по-прежнему будет 1
print(X)     # 1

L = [1, 2]
b = L                    # Разделяют тот же самый объект
b[0] = 'spam'            # Изменение на месте: L тоже увидит изменение
print(L)    # ['spam', 2]

L = [1, 2]
changer (X, L[: ])       # Передача копии, так что L не изменяется

def changer(а, b):
    Ь = Ь[:]           # Создание копии входного списка,
                         # чтобы не влиять на вызывающий код
    а = 2
    Ь[0] = 'spam'       # Изменяет только копию списка

L = [1, 2]
changer (X, tuple (L))      # Передача кортежа, так что изменения приведут к ошибкам

def multiple(x, y):
    x = 2                   # Изменяет только локальные имена
    y = [3, 4]
    return x, y              # Возвращение множества новых значений в кортеже

x = 1
L = [1, 2]
x, L = multiple(x, L)        # Присваивание результатов именам в вызывающем коде
print(x, L)   # 2, [3, 4]



