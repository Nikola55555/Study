"""
1. поддерживают доступ по ключу, а не по индексу
2. неупорядоченные коллекции произвольных объектов
3. имеют переменную длину, разнородны и допускают произвольно глубокое вложение
4. относятся к категории  "изменяемое отображение"
5. представляют собой таблицы ссылок на объекты (хэш-таблицы)
"""

D = {}                                 # Пустой словарь
D = {'name':'Bob', 'age': 40}          # Двухэлементный словарь
E = {'cto':{'name':'Bob', 'age': 40}}  # Вложение
                                   # Альтернативные методики создания:
D = dict(name='Bob', age=40)           # ключевые слова
D = dict([('name', 'Bob'), ('age', 40)]) # Пары ключ/значение
D = dict(zip(keylist, valuelist))       # Упакованные пары ключ/значение
D = dict.fromkeys(['name', 'age'])      # Списки ключей
D['name']                               # индексирование по ключу
E['cto']['age']                         # индексирование по ключу
                                    # Членство:
'age' in D                              # проверка присутствия ключа

                                    # Методы:
D.keys()                                # Все ключи
D.values()                              # Все значения
D.items()                               # Все кортежи ключ + значение
D.copy()                                # Копирование (верхнего уровня)
D.clear()                               # Очистка (удаление всех элементов)
D.update(D2)                            # объединение по ключам
D.get(key, default?)                    # Извлечение по ключу; если отсутствует, тогда вернуть стандартное значение (или None)
D.pop(key, default?)                    # Удаление по ключу; если отсутствует, тогда вернуть стандартное значение (или ощибку)
D.setdefault(key, default?)             # Установка по ключу; если отсутствует, тошда установить в стандартное значение или None
D.popitem()                             # Удаление/возвращение любой пары (ключ, значение)

len(D)                                  # Длина: количество сохраненных элементов
D[key] = 42                             # Добавление ключей; изменение значений, связанных с ключами
del D(key)                              # Удаление элемента по ключу
list(D.keys())                          # Словарные представления

D1.keys() & D2.keys()                   # Словарные представления
D = {x: x*2 for x in range(10)}         # Включение словаря

D = {'spam': 2, 'ham': 1, 'eggs': 3}    # Сщздание словаря
D['spam']                               # Извлечение значения по ключу
